/******************************************************************************
**
** <auto-generated>
**     This code was generated by a tool: UaModeler
**     Runtime Version: 1.4.2, using .NET Server 2.4.0 template (version 2)
**
**     Changes to this file may cause incorrect behavior and will be lost if
**     the code is regenerated.
**
**     Generated by banerjeesuprateek <Suprateek.Banerjee@thi.de>
** </auto-generated>
**
** Copyright (c) 2006-2017 Unified Automation GmbH All rights reserved.
**
** Software License Agreement ("SLA") Version 2.5
**
** Unless explicitly acquired and licensed from Licensor under another
** license, the contents of this file are subject to the Software License
** Agreement ("SLA") Version 2.5, or subsequent versions
** as allowed by the SLA, and You may not copy or use this file in either
** source code or executable form, except in compliance with the terms and
** conditions of the SLA.
**
** All software distributed under the SLA is provided strictly on an
** "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
** AND LICENSOR HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT
** LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
** PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the SLA for specific
** language governing rights and limitations under the SLA.
**
** Project: .NET OPC UA SDK information model for namespace http://thi.opcua.hl7.org/opcfhir/
**
** Description: OPC Unified Architecture Software Development Kit.
**
** The complete license agreement can be found here:
** http://unifiedautomation.com/License/SLA/2.5/
**
** Created: 01.09.2017
**
******************************************************************************/

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Xml;
using UnifiedAutomation.UaBase;
using UnifiedAutomation.UaServer;

namespace thi.opcfhir
{
    #region CodableConceptModel
    /// <summary>
    /// </summary>
    [UaTypeDefinition(NodeId=ObjectTypes.CodableConceptType, NamespaceUri=thi.opcfhir.Namespaces.opcfhir)]
    public partial class CodableConceptModel : BaseObjectModel
    {
        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="CodableConceptModel" /> class.
        /// </summary>
        public CodableConceptModel() : this((CodableConceptModel)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CodableConceptModel" /> class.
        /// </summary>
        /// <param name="template">The template.</param>
        public CodableConceptModel(CodableConceptModel template) : base(template)
        {
            Coding = new CodingModel();
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Gets or sets the Coding
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public CodingModel Coding { get; set; }


        #endregion
    }
    #endregion


    #region CodingModel
    /// <summary>
    /// </summary>
    [UaTypeDefinition(NodeId=ObjectTypes.CodingType, NamespaceUri=thi.opcfhir.Namespaces.opcfhir)]
    public partial class CodingModel : BaseObjectModel
    {
        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="CodingModel" /> class.
        /// </summary>
        public CodingModel() : this((CodingModel)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="CodingModel" /> class.
        /// </summary>
        /// <param name="template">The template.</param>
        public CodingModel(CodingModel template) : base(template)
        {
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Gets or sets the Code
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public string Code { get; set; }

        /// <summary>
        /// Gets or sets the System
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public string System { get; set; }


        #endregion
    }
    #endregion


    #region ComponentModel
    /// <summary>
    /// </summary>
    [UaTypeDefinition(NodeId=ObjectTypes.ComponentType, NamespaceUri=thi.opcfhir.Namespaces.opcfhir)]
    public partial class ComponentModel : BaseObjectModel
    {
        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="ComponentModel" /> class.
        /// </summary>
        public ComponentModel() : this((ComponentModel)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ComponentModel" /> class.
        /// </summary>
        /// <param name="template">The template.</param>
        public ComponentModel(ComponentModel template) : base(template)
        {
            Code = new CodableConceptModel();
            Interpretation = new CodableConceptModel();
            Value = new QuantityModel();
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Gets or sets the Code
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public CodableConceptModel Code { get; set; }

        /// <summary>
        /// Gets or sets the Interpretation
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public CodableConceptModel Interpretation { get; set; }

        /// <summary>
        /// Gets or sets the Value
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public QuantityModel Value { get; set; }


        #endregion
    }
    #endregion


    #region DeviceModel
    /// <summary>
    /// </summary>
    [UaTypeDefinition(NodeId=ObjectTypes.DeviceType, NamespaceUri=thi.opcfhir.Namespaces.opcfhir)]
    public partial class DeviceModel : BaseObjectModel
    {
        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="DeviceModel" /> class.
        /// </summary>
        public DeviceModel() : this((DeviceModel)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="DeviceModel" /> class.
        /// </summary>
        /// <param name="template">The template.</param>
        public DeviceModel(DeviceModel template) : base(template)
        {
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Gets or sets the Id
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the Manufacturer
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public string Manufacturer { get; set; }

        /// <summary>
        /// Gets or sets the Model
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public string Model { get; set; }


        #endregion
    }
    #endregion


    #region HumanNameModel
    /// <summary>
    /// </summary>
    [UaTypeDefinition(NodeId=ObjectTypes.HumanNameType, NamespaceUri=thi.opcfhir.Namespaces.opcfhir)]
    public partial class HumanNameModel : BaseObjectModel
    {
        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="HumanNameModel" /> class.
        /// </summary>
        public HumanNameModel() : this((HumanNameModel)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="HumanNameModel" /> class.
        /// </summary>
        /// <param name="template">The template.</param>
        public HumanNameModel(HumanNameModel template) : base(template)
        {
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Gets or sets the ForFamily
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public string ForFamily { get; set; }

        /// <summary>
        /// Gets or sets the WithGiven
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public string WithGiven { get; set; }


        #endregion
    }
    #endregion


    #region ObservationModel
    /// <summary>
    /// </summary>
    [UaTypeDefinition(NodeId=ObjectTypes.ObservationType, NamespaceUri=thi.opcfhir.Namespaces.opcfhir)]
    public partial class ObservationModel : BaseObjectModel
    {
        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="ObservationModel" /> class.
        /// </summary>
        public ObservationModel() : this((ObservationModel)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="ObservationModel" /> class.
        /// </summary>
        /// <param name="template">The template.</param>
        public ObservationModel(ObservationModel template) : base(template)
        {
            Components = new FolderModel();
            Device = new DeviceModel();
            Performer = new PractitionerModel();
            Subject = new PatientModel();
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Gets or sets the Components
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public FolderModel Components { get; set; }

        /// <summary>
        /// Gets or sets the Device
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public DeviceModel Device { get; set; }

        /// <summary>
        /// Gets or sets the Id
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the Performer
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public PractitionerModel Performer { get; set; }

        /// <summary>
        /// Gets or sets the Subject
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public PatientModel Subject { get; set; }


        #endregion
    }
    #endregion


    #region PatientModel
    /// <summary>
    /// </summary>
    [UaTypeDefinition(NodeId=ObjectTypes.PatientType, NamespaceUri=thi.opcfhir.Namespaces.opcfhir)]
    public partial class PatientModel : BaseObjectModel
    {
        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="PatientModel" /> class.
        /// </summary>
        public PatientModel() : this((PatientModel)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PatientModel" /> class.
        /// </summary>
        /// <param name="template">The template.</param>
        public PatientModel(PatientModel template) : base(template)
        {
            Name = new HumanNameModel();
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Gets or sets the Id
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the Name
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public HumanNameModel Name { get; set; }


        #endregion
    }
    #endregion


    #region PractitionerModel
    /// <summary>
    /// </summary>
    [UaTypeDefinition(NodeId=ObjectTypes.PractitionerType, NamespaceUri=thi.opcfhir.Namespaces.opcfhir)]
    public partial class PractitionerModel : BaseObjectModel
    {
        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="PractitionerModel" /> class.
        /// </summary>
        public PractitionerModel() : this((PractitionerModel)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="PractitionerModel" /> class.
        /// </summary>
        /// <param name="template">The template.</param>
        public PractitionerModel(PractitionerModel template) : base(template)
        {
            Name = new HumanNameModel();
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Gets or sets the Id
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the Name
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public HumanNameModel Name { get; set; }


        #endregion
    }
    #endregion


    #region QuantityModel
    /// <summary>
    /// </summary>
    [UaTypeDefinition(NodeId=ObjectTypes.QuantityType, NamespaceUri=thi.opcfhir.Namespaces.opcfhir)]
    public partial class QuantityModel : BaseObjectModel
    {
        #region Constructors
        /// <summary>
        /// Initializes a new instance of the <see cref="QuantityModel" /> class.
        /// </summary>
        public QuantityModel() : this((QuantityModel)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="QuantityModel" /> class.
        /// </summary>
        /// <param name="template">The template.</param>
        public QuantityModel(QuantityModel template) : base(template)
        {
        }
        #endregion

        #region Public Properties
        /// <summary>
        /// Gets or sets the Code
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public string Code { get; set; }

        /// <summary>
        /// Gets or sets the Unit
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public string Unit { get; set; }

        /// <summary>
        /// Gets or sets the Value
        /// </summary>
        [UaInstanceDeclaration(NamespaceUri = Namespaces.opcfhir)]
        public double Value { get; set; }


        #endregion
    }
    #endregion



}
