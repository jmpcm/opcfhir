/******************************************************************************
**
** <auto-generated>
**     This code was generated by a tool: UaModeler
**     Runtime Version: 1.4.2, using .NET Server 2.4.0 template (version 2)
**
**     Changes to this file may cause incorrect behavior and will be lost if
**     the code is regenerated.
**
**     Generated by banerjeesuprateek <Suprateek.Banerjee@thi.de>
** </auto-generated>
**
** Copyright (c) 2006-2017 Unified Automation GmbH All rights reserved.
**
** Software License Agreement ("SLA") Version 2.5
**
** Unless explicitly acquired and licensed from Licensor under another
** license, the contents of this file are subject to the Software License
** Agreement ("SLA") Version 2.5, or subsequent versions
** as allowed by the SLA, and You may not copy or use this file in either
** source code or executable form, except in compliance with the terms and
** conditions of the SLA.
**
** All software distributed under the SLA is provided strictly on an
** "AS IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
** AND LICENSOR HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT
** LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
** PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the SLA for specific
** language governing rights and limitations under the SLA.
**
** Project: .NET OPC UA SDK information model for namespace http://thi.opcua.hl7.org/opcfhir/
**
** Description: OPC Unified Architecture Software Development Kit.
**
** The complete license agreement can be found here:
** http://unifiedautomation.com/License/SLA/2.5/
**
** Created: 01.09.2017
**
******************************************************************************/

using System;
using System.Collections.Generic;
using System.Text;
using System.Reflection;
using System.Xml;
using System.Runtime.Serialization;
using UnifiedAutomation.UaBase;

namespace thi.opcfhir
{
    #region DataType Identifiers
    /// <summary>
    /// A class that declares constants for all DataTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.4.2")]
    public static partial class DataTypes
    {
    }
    #endregion

    #region Object Identifiers
    /// <summary>
    /// A class that declares constants for all Objects in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.4.2")]
    public static partial class Objects
    {
        /// <summary>
        /// The identifier for the Coding Object.
        /// </summary>
        public const uint CodableConceptType_Coding = 5001;

        /// <summary>
        /// The identifier for the Code Object.
        /// </summary>
        public const uint ComponentType_Code = 5002;

        /// <summary>
        /// The identifier for the Coding Object.
        /// </summary>
        public const uint ComponentType_Code_Coding = 5003;

        /// <summary>
        /// The identifier for the Interpretation Object.
        /// </summary>
        public const uint ComponentType_Interpretation = 5005;

        /// <summary>
        /// The identifier for the Coding Object.
        /// </summary>
        public const uint ComponentType_Interpretation_Coding = 5006;

        /// <summary>
        /// The identifier for the Value Object.
        /// </summary>
        public const uint ComponentType_Value = 5004;

        /// <summary>
        /// The identifier for the Components Object.
        /// </summary>
        public const uint ObservationType_Components = 5009;

        /// <summary>
        /// The identifier for the Device Object.
        /// </summary>
        public const uint ObservationType_Device = 5010;

        /// <summary>
        /// The identifier for the Performer Object.
        /// </summary>
        public const uint ObservationType_Performer = 5030;

        /// <summary>
        /// The identifier for the Name Object.
        /// </summary>
        public const uint ObservationType_Performer_Name = 5031;

        /// <summary>
        /// The identifier for the Name Object.
        /// </summary>
        public const uint PractitionerType_Name = 5008;

        /// <summary>
        /// The identifier for the Subject Object.
        /// </summary>
        public const uint ObservationType_Subject = 5025;

        /// <summary>
        /// The identifier for the Name Object.
        /// </summary>
        public const uint ObservationType_Subject_Name = 5026;

        /// <summary>
        /// The identifier for the Name Object.
        /// </summary>
        public const uint PatientType_Name = 5007;

        /// <summary>
        /// The identifier for the Observation Object.
        /// </summary>
        public const uint Observation = 5011;

        /// <summary>
        /// The identifier for the Components Object.
        /// </summary>
        public const uint Observation_Components = 5012;

        /// <summary>
        /// The identifier for the Diastolic Object.
        /// </summary>
        public const uint Observation_Components_Diastolic = 5019;

        /// <summary>
        /// The identifier for the Code Object.
        /// </summary>
        public const uint Observation_Components_Diastolic_Code = 5020;

        /// <summary>
        /// The identifier for the Coding Object.
        /// </summary>
        public const uint Observation_Components_Diastolic_Code_Coding = 5021;

        /// <summary>
        /// The identifier for the Code_2 Object.
        /// </summary>
        public const uint Observation_Components_Diastolic_Code_2 = 5036;

        /// <summary>
        /// The identifier for the Coding Object.
        /// </summary>
        public const uint Observation_Components_Diastolic_Code_2_Coding = 5037;

        /// <summary>
        /// The identifier for the Interpretation Object.
        /// </summary>
        public const uint Observation_Components_Diastolic_Interpretation = 5022;

        /// <summary>
        /// The identifier for the Coding Object.
        /// </summary>
        public const uint Observation_Components_Diastolic_Interpretation_Coding = 5023;

        /// <summary>
        /// The identifier for the Value Object.
        /// </summary>
        public const uint Observation_Components_Diastolic_Value = 5024;

        /// <summary>
        /// The identifier for the Systolic Object.
        /// </summary>
        public const uint Observation_Components_Systolic = 5013;

        /// <summary>
        /// The identifier for the Code Object.
        /// </summary>
        public const uint Observation_Components_Systolic_Code = 5014;

        /// <summary>
        /// The identifier for the Coding Object.
        /// </summary>
        public const uint Observation_Components_Systolic_Code_Coding = 5015;

        /// <summary>
        /// The identifier for the Code_2 Object.
        /// </summary>
        public const uint Observation_Components_Systolic_Code_2 = 5034;

        /// <summary>
        /// The identifier for the Coding Object.
        /// </summary>
        public const uint Observation_Components_Systolic_Code_2_Coding = 5035;

        /// <summary>
        /// The identifier for the Interpretation Object.
        /// </summary>
        public const uint Observation_Components_Systolic_Interpretation = 5016;

        /// <summary>
        /// The identifier for the Coding Object.
        /// </summary>
        public const uint Observation_Components_Systolic_Interpretation_Coding = 5017;

        /// <summary>
        /// The identifier for the Value Object.
        /// </summary>
        public const uint Observation_Components_Systolic_Value = 5018;

        /// <summary>
        /// The identifier for the Device Object.
        /// </summary>
        public const uint Observation_Device = 5027;

        /// <summary>
        /// The identifier for the Performer Object.
        /// </summary>
        public const uint Observation_Performer = 5032;

        /// <summary>
        /// The identifier for the Name Object.
        /// </summary>
        public const uint Observation_Performer_Name = 5033;

        /// <summary>
        /// The identifier for the Subject Object.
        /// </summary>
        public const uint Observation_Subject = 5028;

        /// <summary>
        /// The identifier for the Name Object.
        /// </summary>
        public const uint Observation_Subject_Name = 5029;

    }
    #endregion

    #region ObjectType Identifiers
    /// <summary>
    /// A class that declares constants for all ObjectTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.4.2")]
    public static partial class ObjectTypes
    {
        /// <summary>
        /// The identifier for the CodableConceptType ObjectType.
        /// </summary>
        public const uint CodableConceptType = 1009;

        /// <summary>
        /// The identifier for the CodingType ObjectType.
        /// </summary>
        public const uint CodingType = 1008;

        /// <summary>
        /// The identifier for the ComponentType ObjectType.
        /// </summary>
        public const uint ComponentType = 1010;

        /// <summary>
        /// The identifier for the DeviceType ObjectType.
        /// </summary>
        public const uint DeviceType = 1005;

        /// <summary>
        /// The identifier for the HumanNameType ObjectType.
        /// </summary>
        public const uint HumanNameType = 1004;

        /// <summary>
        /// The identifier for the ObservationType ObjectType.
        /// </summary>
        public const uint ObservationType = 1006;

        /// <summary>
        /// The identifier for the PatientType ObjectType.
        /// </summary>
        public const uint PatientType = 1002;

        /// <summary>
        /// The identifier for the PractitionerType ObjectType.
        /// </summary>
        public const uint PractitionerType = 1003;

        /// <summary>
        /// The identifier for the QuantityType ObjectType.
        /// </summary>
        public const uint QuantityType = 1007;

    }
    #endregion

    #region Method Identifiers
    /// <summary>
    /// A class that declares constants for all Methods in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.4.2")]
    public static partial class Methods
    {
    }
    #endregion

    #region ReferenceType Identifiers
    /// <summary>
    /// A class that declares constants for all ReferenceTyped in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.4.2")]
    public static partial class ReferenceTypes
    {
        /// <summary>
        /// The identifier for the ResourceReferenceType ReferenceType.
        /// </summary>
        public const uint ResourceReferenceType = 4002;

    }
    #endregion

    #region Variable Identifiers
    /// <summary>
    /// A class that declares constants for all Variables in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.4.2")]
    public static partial class Variables
    {
        /// <summary>
        /// The identifier for the Code Variable.
        /// </summary>
        public const uint CodableConceptType_Coding_Code = 6014;

        /// <summary>
        /// The identifier for the System Variable.
        /// </summary>
        public const uint CodableConceptType_Coding_System = 6015;

        /// <summary>
        /// The identifier for the Code Variable.
        /// </summary>
        public const uint CodingType_Code = 6013;

        /// <summary>
        /// The identifier for the System Variable.
        /// </summary>
        public const uint CodingType_System = 6012;

        /// <summary>
        /// The identifier for the Code Variable.
        /// </summary>
        public const uint ComponentType_Code_Coding_Code = 6016;

        /// <summary>
        /// The identifier for the System Variable.
        /// </summary>
        public const uint ComponentType_Code_Coding_System = 6017;

        /// <summary>
        /// The identifier for the Code Variable.
        /// </summary>
        public const uint ComponentType_Interpretation_Coding_Code = 6021;

        /// <summary>
        /// The identifier for the System Variable.
        /// </summary>
        public const uint ComponentType_Interpretation_Coding_System = 6022;

        /// <summary>
        /// The identifier for the Code Variable.
        /// </summary>
        public const uint ComponentType_Value_Code = 6018;

        /// <summary>
        /// The identifier for the Unit Variable.
        /// </summary>
        public const uint ComponentType_Value_Unit = 6019;

        /// <summary>
        /// The identifier for the Value Variable.
        /// </summary>
        public const uint ComponentType_Value_Value = 6020;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint DeviceType_Id = 6005;

        /// <summary>
        /// The identifier for the Manufacturer Variable.
        /// </summary>
        public const uint DeviceType_Manufacturer = 6006;

        /// <summary>
        /// The identifier for the Model Variable.
        /// </summary>
        public const uint DeviceType_Model = 6007;

        /// <summary>
        /// The identifier for the ForFamily Variable.
        /// </summary>
        public const uint HumanNameType_ForFamily = 6003;

        /// <summary>
        /// The identifier for the WithGiven Variable.
        /// </summary>
        public const uint HumanNameType_WithGiven = 6004;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint ObservationType_Device_Id = 6027;

        /// <summary>
        /// The identifier for the Manufacturer Variable.
        /// </summary>
        public const uint ObservationType_Device_Manufacturer = 6028;

        /// <summary>
        /// The identifier for the Model Variable.
        /// </summary>
        public const uint ObservationType_Device_Model = 6029;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint ObservationType_Id = 6008;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint ObservationType_Performer_Id = 6054;

        /// <summary>
        /// The identifier for the ForFamily Variable.
        /// </summary>
        public const uint ObservationType_Performer_Name_ForFamily = 6055;

        /// <summary>
        /// The identifier for the WithGiven Variable.
        /// </summary>
        public const uint ObservationType_Performer_Name_WithGiven = 6056;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint ObservationType_Subject_Id = 6045;

        /// <summary>
        /// The identifier for the ForFamily Variable.
        /// </summary>
        public const uint ObservationType_Subject_Name_ForFamily = 6046;

        /// <summary>
        /// The identifier for the WithGiven Variable.
        /// </summary>
        public const uint ObservationType_Subject_Name_WithGiven = 6047;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint PatientType_Id = 6001;

        /// <summary>
        /// The identifier for the ForFamily Variable.
        /// </summary>
        public const uint PatientType_Name_ForFamily = 6023;

        /// <summary>
        /// The identifier for the WithGiven Variable.
        /// </summary>
        public const uint PatientType_Name_WithGiven = 6024;

        /// <summary>
        /// The identifier for the Id Variable.
        /// </summary>
        public const uint PractitionerType_Id = 6002;

        /// <summary>
        /// The identifier for the ForFamily Variable.
        /// </summary>
        public const uint PractitionerType_Name_ForFamily = 6025;

        /// <summary>
        /// The identifier for the WithGiven Variable.
        /// </summary>
        public const uint PractitionerType_Name_WithGiven = 6026;

        /// <summary>
        /// The identifier for the Code Variable.
        /// </summary>
        public const uint QuantityType_Code = 6011;

        /// <summary>
        /// The identifier for the Unit Variable.
        /// </summary>
        public const uint QuantityType_Unit = 6010;

        /// <summary>
        /// The identifier for the Value Variable.
        /// </summary>
        public const uint QuantityType_Value = 6009;

        /// <summary>
        /// The identifier for the Code Object.
        /// </summary>
        public const uint Observation_Components_Diastolic_Code_Coding_Code = 6038;

        /// <summary>
        /// The identifier for the System Object.
        /// </summary>
        public const uint Observation_Components_Diastolic_Code_Coding_System = 6039;

        /// <summary>
        /// The identifier for the Code Object.
        /// </summary>
        public const uint Observation_Components_Diastolic_Code_2_Coding_Code = 6062;

        /// <summary>
        /// The identifier for the System Object.
        /// </summary>
        public const uint Observation_Components_Diastolic_Code_2_Coding_System = 6063;

        /// <summary>
        /// The identifier for the Code Object.
        /// </summary>
        public const uint Observation_Components_Diastolic_Interpretation_Coding_Code = 6040;

        /// <summary>
        /// The identifier for the System Object.
        /// </summary>
        public const uint Observation_Components_Diastolic_Interpretation_Coding_System = 6041;

        /// <summary>
        /// The identifier for the Code Object.
        /// </summary>
        public const uint Observation_Components_Diastolic_Value_Code = 6042;

        /// <summary>
        /// The identifier for the Unit Object.
        /// </summary>
        public const uint Observation_Components_Diastolic_Value_Unit = 6043;

        /// <summary>
        /// The identifier for the Value Object.
        /// </summary>
        public const uint Observation_Components_Diastolic_Value_Value = 6044;

        /// <summary>
        /// The identifier for the Code Object.
        /// </summary>
        public const uint Observation_Components_Systolic_Code_Coding_Code = 6031;

        /// <summary>
        /// The identifier for the System Object.
        /// </summary>
        public const uint Observation_Components_Systolic_Code_Coding_System = 6032;

        /// <summary>
        /// The identifier for the Code Object.
        /// </summary>
        public const uint Observation_Components_Systolic_Code_2_Coding_Code = 6060;

        /// <summary>
        /// The identifier for the System Object.
        /// </summary>
        public const uint Observation_Components_Systolic_Code_2_Coding_System = 6061;

        /// <summary>
        /// The identifier for the Code Object.
        /// </summary>
        public const uint Observation_Components_Systolic_Interpretation_Coding_Code = 6033;

        /// <summary>
        /// The identifier for the System Object.
        /// </summary>
        public const uint Observation_Components_Systolic_Interpretation_Coding_System = 6034;

        /// <summary>
        /// The identifier for the Code Object.
        /// </summary>
        public const uint Observation_Components_Systolic_Value_Code = 6035;

        /// <summary>
        /// The identifier for the Unit Object.
        /// </summary>
        public const uint Observation_Components_Systolic_Value_Unit = 6036;

        /// <summary>
        /// The identifier for the Value Object.
        /// </summary>
        public const uint Observation_Components_Systolic_Value_Value = 6037;

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const uint Observation_Device_Id = 6048;

        /// <summary>
        /// The identifier for the Manufacturer Object.
        /// </summary>
        public const uint Observation_Device_Manufacturer = 6049;

        /// <summary>
        /// The identifier for the Model Object.
        /// </summary>
        public const uint Observation_Device_Model = 6050;

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const uint Observation_Id = 6030;

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const uint Observation_Performer_Id = 6057;

        /// <summary>
        /// The identifier for the ForFamily Object.
        /// </summary>
        public const uint Observation_Performer_Name_ForFamily = 6058;

        /// <summary>
        /// The identifier for the WithGiven Object.
        /// </summary>
        public const uint Observation_Performer_Name_WithGiven = 6059;

        /// <summary>
        /// The identifier for the Id Object.
        /// </summary>
        public const uint Observation_Subject_Id = 6051;

        /// <summary>
        /// The identifier for the ForFamily Object.
        /// </summary>
        public const uint Observation_Subject_Name_ForFamily = 6052;

        /// <summary>
        /// The identifier for the WithGiven Object.
        /// </summary>
        public const uint Observation_Subject_Name_WithGiven = 6053;

    }
    #endregion

    #region VariableTypes Identifiers
    /// <summary>
    /// A class that declares constants for all VariableTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.4.2")]
    public static partial class VariableTypes
    {
    }
    #endregion

    #region DataType Node Identifiers
    /// <summary>
    /// A class that declares constants for all DataTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.4.2")]
    public static partial class DataTypeIds
    {
    }
    #endregion

    #region Method Node Identifiers
    /// <summary>
    /// A class that declares constants for all Methods in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.4.2")]
    public static partial class MethodIds
    {
    }
    #endregion

    #region Object Node Identifiers
    /// <summary>
    /// A class that declares constants for all Objects in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.4.2")]
    public static partial class ObjectIds
    {
        /// <summary>
        /// The identifier for the CodableConceptType_Coding Object.
        /// </summary>
        public static readonly ExpandedNodeId CodableConceptType_Coding = new ExpandedNodeId(Objects.CodableConceptType_Coding, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ComponentType_Code Object.
        /// </summary>
        public static readonly ExpandedNodeId ComponentType_Code = new ExpandedNodeId(Objects.ComponentType_Code, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ComponentType_Code_Coding Object.
        /// </summary>
        public static readonly ExpandedNodeId ComponentType_Code_Coding = new ExpandedNodeId(Objects.ComponentType_Code_Coding, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ComponentType_Interpretation Object.
        /// </summary>
        public static readonly ExpandedNodeId ComponentType_Interpretation = new ExpandedNodeId(Objects.ComponentType_Interpretation, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ComponentType_Interpretation_Coding Object.
        /// </summary>
        public static readonly ExpandedNodeId ComponentType_Interpretation_Coding = new ExpandedNodeId(Objects.ComponentType_Interpretation_Coding, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ComponentType_Value Object.
        /// </summary>
        public static readonly ExpandedNodeId ComponentType_Value = new ExpandedNodeId(Objects.ComponentType_Value, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ObservationType_Components Object.
        /// </summary>
        public static readonly ExpandedNodeId ObservationType_Components = new ExpandedNodeId(Objects.ObservationType_Components, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ObservationType_Device Object.
        /// </summary>
        public static readonly ExpandedNodeId ObservationType_Device = new ExpandedNodeId(Objects.ObservationType_Device, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ObservationType_Performer Object.
        /// </summary>
        public static readonly ExpandedNodeId ObservationType_Performer = new ExpandedNodeId(Objects.ObservationType_Performer, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ObservationType_Performer_Name Object.
        /// </summary>
        public static readonly ExpandedNodeId ObservationType_Performer_Name = new ExpandedNodeId(Objects.ObservationType_Performer_Name, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the PractitionerType_Name Object.
        /// </summary>
        public static readonly ExpandedNodeId PractitionerType_Name = new ExpandedNodeId(Objects.PractitionerType_Name, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ObservationType_Subject Object.
        /// </summary>
        public static readonly ExpandedNodeId ObservationType_Subject = new ExpandedNodeId(Objects.ObservationType_Subject, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ObservationType_Subject_Name Object.
        /// </summary>
        public static readonly ExpandedNodeId ObservationType_Subject_Name = new ExpandedNodeId(Objects.ObservationType_Subject_Name, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the PatientType_Name Object.
        /// </summary>
        public static readonly ExpandedNodeId PatientType_Name = new ExpandedNodeId(Objects.PatientType_Name, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation = new ExpandedNodeId(Objects.Observation, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components = new ExpandedNodeId(Objects.Observation_Components, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Diastolic Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Diastolic = new ExpandedNodeId(Objects.Observation_Components_Diastolic, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Diastolic_Code Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Diastolic_Code = new ExpandedNodeId(Objects.Observation_Components_Diastolic_Code, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Diastolic_Code_Coding Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Diastolic_Code_Coding = new ExpandedNodeId(Objects.Observation_Components_Diastolic_Code_Coding, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Diastolic_Code_2 Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Diastolic_Code_2 = new ExpandedNodeId(Objects.Observation_Components_Diastolic_Code_2, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Diastolic_Code_2_Coding Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Diastolic_Code_2_Coding = new ExpandedNodeId(Objects.Observation_Components_Diastolic_Code_2_Coding, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Diastolic_Interpretation Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Diastolic_Interpretation = new ExpandedNodeId(Objects.Observation_Components_Diastolic_Interpretation, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Diastolic_Interpretation_Coding Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Diastolic_Interpretation_Coding = new ExpandedNodeId(Objects.Observation_Components_Diastolic_Interpretation_Coding, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Diastolic_Value Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Diastolic_Value = new ExpandedNodeId(Objects.Observation_Components_Diastolic_Value, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Systolic Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Systolic = new ExpandedNodeId(Objects.Observation_Components_Systolic, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Systolic_Code Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Systolic_Code = new ExpandedNodeId(Objects.Observation_Components_Systolic_Code, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Systolic_Code_Coding Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Systolic_Code_Coding = new ExpandedNodeId(Objects.Observation_Components_Systolic_Code_Coding, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Systolic_Code_2 Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Systolic_Code_2 = new ExpandedNodeId(Objects.Observation_Components_Systolic_Code_2, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Systolic_Code_2_Coding Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Systolic_Code_2_Coding = new ExpandedNodeId(Objects.Observation_Components_Systolic_Code_2_Coding, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Systolic_Interpretation Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Systolic_Interpretation = new ExpandedNodeId(Objects.Observation_Components_Systolic_Interpretation, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Systolic_Interpretation_Coding Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Systolic_Interpretation_Coding = new ExpandedNodeId(Objects.Observation_Components_Systolic_Interpretation_Coding, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Systolic_Value Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Systolic_Value = new ExpandedNodeId(Objects.Observation_Components_Systolic_Value, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Device Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Device = new ExpandedNodeId(Objects.Observation_Device, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Performer Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Performer = new ExpandedNodeId(Objects.Observation_Performer, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Performer_Name Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Performer_Name = new ExpandedNodeId(Objects.Observation_Performer_Name, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Subject Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Subject = new ExpandedNodeId(Objects.Observation_Subject, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Subject_Name Object.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Subject_Name = new ExpandedNodeId(Objects.Observation_Subject_Name, Namespaces.opcfhir);

    }
    #endregion

    #region ObjectType Node Identifiers
    /// <summary>
    /// A class that declares constants for all Objects in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.4.2")]
    public static partial class ObjectTypeIds
    {
        /// <summary>
        /// The identifier for the CodableConceptType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId CodableConceptType = new ExpandedNodeId(ObjectTypes.CodableConceptType, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the CodingType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId CodingType = new ExpandedNodeId(ObjectTypes.CodingType, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ComponentType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ComponentType = new ExpandedNodeId(ObjectTypes.ComponentType, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the DeviceType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId DeviceType = new ExpandedNodeId(ObjectTypes.DeviceType, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the HumanNameType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId HumanNameType = new ExpandedNodeId(ObjectTypes.HumanNameType, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ObservationType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId ObservationType = new ExpandedNodeId(ObjectTypes.ObservationType, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the PatientType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId PatientType = new ExpandedNodeId(ObjectTypes.PatientType, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the PractitionerType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId PractitionerType = new ExpandedNodeId(ObjectTypes.PractitionerType, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the QuantityType ObjectType.
        /// </summary>
        public static readonly ExpandedNodeId QuantityType = new ExpandedNodeId(ObjectTypes.QuantityType, Namespaces.opcfhir);

    }
    #endregion

    #region ReferenceType Node Identifiers
    /// <summary>
    /// A class that declares constants for all ReferenceTypes in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.4.2")]
    public static partial class ReferenceTypeIds
    {
        /// <summary>
        /// The identifier for the ResourceReferenceType ReferenceType.
        /// </summary>
        public static readonly ExpandedNodeId ResourceReferenceType = new ExpandedNodeId(ReferenceTypes.ResourceReferenceType, Namespaces.opcfhir);

    }
    #endregion

    #region Variable Node Identifiers
    /// <summary>
    /// A class that declares constants for all Variables in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.4.2")]
    public static partial class VariableIds
    {
        /// <summary>
        /// The identifier for the CodableConceptType_Coding_Code Variable.
        /// </summary>
        public static readonly ExpandedNodeId CodableConceptType_Coding_Code = new ExpandedNodeId(Variables.CodableConceptType_Coding_Code, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the CodableConceptType_Coding_System Variable.
        /// </summary>
        public static readonly ExpandedNodeId CodableConceptType_Coding_System = new ExpandedNodeId(Variables.CodableConceptType_Coding_System, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the CodingType_Code Variable.
        /// </summary>
        public static readonly ExpandedNodeId CodingType_Code = new ExpandedNodeId(Variables.CodingType_Code, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the CodingType_System Variable.
        /// </summary>
        public static readonly ExpandedNodeId CodingType_System = new ExpandedNodeId(Variables.CodingType_System, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ComponentType_Code_Coding_Code Variable.
        /// </summary>
        public static readonly ExpandedNodeId ComponentType_Code_Coding_Code = new ExpandedNodeId(Variables.ComponentType_Code_Coding_Code, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ComponentType_Code_Coding_System Variable.
        /// </summary>
        public static readonly ExpandedNodeId ComponentType_Code_Coding_System = new ExpandedNodeId(Variables.ComponentType_Code_Coding_System, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ComponentType_Interpretation_Coding_Code Variable.
        /// </summary>
        public static readonly ExpandedNodeId ComponentType_Interpretation_Coding_Code = new ExpandedNodeId(Variables.ComponentType_Interpretation_Coding_Code, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ComponentType_Interpretation_Coding_System Variable.
        /// </summary>
        public static readonly ExpandedNodeId ComponentType_Interpretation_Coding_System = new ExpandedNodeId(Variables.ComponentType_Interpretation_Coding_System, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ComponentType_Value_Code Variable.
        /// </summary>
        public static readonly ExpandedNodeId ComponentType_Value_Code = new ExpandedNodeId(Variables.ComponentType_Value_Code, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ComponentType_Value_Unit Variable.
        /// </summary>
        public static readonly ExpandedNodeId ComponentType_Value_Unit = new ExpandedNodeId(Variables.ComponentType_Value_Unit, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ComponentType_Value_Value Variable.
        /// </summary>
        public static readonly ExpandedNodeId ComponentType_Value_Value = new ExpandedNodeId(Variables.ComponentType_Value_Value, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the DeviceType_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId DeviceType_Id = new ExpandedNodeId(Variables.DeviceType_Id, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the DeviceType_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId DeviceType_Manufacturer = new ExpandedNodeId(Variables.DeviceType_Manufacturer, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the DeviceType_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId DeviceType_Model = new ExpandedNodeId(Variables.DeviceType_Model, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the HumanNameType_ForFamily Variable.
        /// </summary>
        public static readonly ExpandedNodeId HumanNameType_ForFamily = new ExpandedNodeId(Variables.HumanNameType_ForFamily, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the HumanNameType_WithGiven Variable.
        /// </summary>
        public static readonly ExpandedNodeId HumanNameType_WithGiven = new ExpandedNodeId(Variables.HumanNameType_WithGiven, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ObservationType_Device_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId ObservationType_Device_Id = new ExpandedNodeId(Variables.ObservationType_Device_Id, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ObservationType_Device_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId ObservationType_Device_Manufacturer = new ExpandedNodeId(Variables.ObservationType_Device_Manufacturer, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ObservationType_Device_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId ObservationType_Device_Model = new ExpandedNodeId(Variables.ObservationType_Device_Model, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ObservationType_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId ObservationType_Id = new ExpandedNodeId(Variables.ObservationType_Id, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ObservationType_Performer_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId ObservationType_Performer_Id = new ExpandedNodeId(Variables.ObservationType_Performer_Id, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ObservationType_Performer_Name_ForFamily Variable.
        /// </summary>
        public static readonly ExpandedNodeId ObservationType_Performer_Name_ForFamily = new ExpandedNodeId(Variables.ObservationType_Performer_Name_ForFamily, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ObservationType_Performer_Name_WithGiven Variable.
        /// </summary>
        public static readonly ExpandedNodeId ObservationType_Performer_Name_WithGiven = new ExpandedNodeId(Variables.ObservationType_Performer_Name_WithGiven, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ObservationType_Subject_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId ObservationType_Subject_Id = new ExpandedNodeId(Variables.ObservationType_Subject_Id, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ObservationType_Subject_Name_ForFamily Variable.
        /// </summary>
        public static readonly ExpandedNodeId ObservationType_Subject_Name_ForFamily = new ExpandedNodeId(Variables.ObservationType_Subject_Name_ForFamily, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the ObservationType_Subject_Name_WithGiven Variable.
        /// </summary>
        public static readonly ExpandedNodeId ObservationType_Subject_Name_WithGiven = new ExpandedNodeId(Variables.ObservationType_Subject_Name_WithGiven, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the PatientType_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId PatientType_Id = new ExpandedNodeId(Variables.PatientType_Id, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the PatientType_Name_ForFamily Variable.
        /// </summary>
        public static readonly ExpandedNodeId PatientType_Name_ForFamily = new ExpandedNodeId(Variables.PatientType_Name_ForFamily, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the PatientType_Name_WithGiven Variable.
        /// </summary>
        public static readonly ExpandedNodeId PatientType_Name_WithGiven = new ExpandedNodeId(Variables.PatientType_Name_WithGiven, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the PractitionerType_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId PractitionerType_Id = new ExpandedNodeId(Variables.PractitionerType_Id, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the PractitionerType_Name_ForFamily Variable.
        /// </summary>
        public static readonly ExpandedNodeId PractitionerType_Name_ForFamily = new ExpandedNodeId(Variables.PractitionerType_Name_ForFamily, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the PractitionerType_Name_WithGiven Variable.
        /// </summary>
        public static readonly ExpandedNodeId PractitionerType_Name_WithGiven = new ExpandedNodeId(Variables.PractitionerType_Name_WithGiven, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the QuantityType_Code Variable.
        /// </summary>
        public static readonly ExpandedNodeId QuantityType_Code = new ExpandedNodeId(Variables.QuantityType_Code, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the QuantityType_Unit Variable.
        /// </summary>
        public static readonly ExpandedNodeId QuantityType_Unit = new ExpandedNodeId(Variables.QuantityType_Unit, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the QuantityType_Value Variable.
        /// </summary>
        public static readonly ExpandedNodeId QuantityType_Value = new ExpandedNodeId(Variables.QuantityType_Value, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Diastolic_Code_Coding_Code Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Diastolic_Code_Coding_Code = new ExpandedNodeId(Variables.Observation_Components_Diastolic_Code_Coding_Code, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Diastolic_Code_Coding_System Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Diastolic_Code_Coding_System = new ExpandedNodeId(Variables.Observation_Components_Diastolic_Code_Coding_System, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Diastolic_Code_2_Coding_Code Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Diastolic_Code_2_Coding_Code = new ExpandedNodeId(Variables.Observation_Components_Diastolic_Code_2_Coding_Code, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Diastolic_Code_2_Coding_System Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Diastolic_Code_2_Coding_System = new ExpandedNodeId(Variables.Observation_Components_Diastolic_Code_2_Coding_System, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Diastolic_Interpretation_Coding_Code Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Diastolic_Interpretation_Coding_Code = new ExpandedNodeId(Variables.Observation_Components_Diastolic_Interpretation_Coding_Code, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Diastolic_Interpretation_Coding_System Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Diastolic_Interpretation_Coding_System = new ExpandedNodeId(Variables.Observation_Components_Diastolic_Interpretation_Coding_System, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Diastolic_Value_Code Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Diastolic_Value_Code = new ExpandedNodeId(Variables.Observation_Components_Diastolic_Value_Code, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Diastolic_Value_Unit Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Diastolic_Value_Unit = new ExpandedNodeId(Variables.Observation_Components_Diastolic_Value_Unit, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Diastolic_Value_Value Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Diastolic_Value_Value = new ExpandedNodeId(Variables.Observation_Components_Diastolic_Value_Value, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Systolic_Code_Coding_Code Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Systolic_Code_Coding_Code = new ExpandedNodeId(Variables.Observation_Components_Systolic_Code_Coding_Code, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Systolic_Code_Coding_System Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Systolic_Code_Coding_System = new ExpandedNodeId(Variables.Observation_Components_Systolic_Code_Coding_System, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Systolic_Code_2_Coding_Code Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Systolic_Code_2_Coding_Code = new ExpandedNodeId(Variables.Observation_Components_Systolic_Code_2_Coding_Code, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Systolic_Code_2_Coding_System Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Systolic_Code_2_Coding_System = new ExpandedNodeId(Variables.Observation_Components_Systolic_Code_2_Coding_System, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Systolic_Interpretation_Coding_Code Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Systolic_Interpretation_Coding_Code = new ExpandedNodeId(Variables.Observation_Components_Systolic_Interpretation_Coding_Code, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Systolic_Interpretation_Coding_System Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Systolic_Interpretation_Coding_System = new ExpandedNodeId(Variables.Observation_Components_Systolic_Interpretation_Coding_System, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Systolic_Value_Code Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Systolic_Value_Code = new ExpandedNodeId(Variables.Observation_Components_Systolic_Value_Code, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Systolic_Value_Unit Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Systolic_Value_Unit = new ExpandedNodeId(Variables.Observation_Components_Systolic_Value_Unit, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Components_Systolic_Value_Value Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Components_Systolic_Value_Value = new ExpandedNodeId(Variables.Observation_Components_Systolic_Value_Value, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Device_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Device_Id = new ExpandedNodeId(Variables.Observation_Device_Id, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Device_Manufacturer Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Device_Manufacturer = new ExpandedNodeId(Variables.Observation_Device_Manufacturer, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Device_Model Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Device_Model = new ExpandedNodeId(Variables.Observation_Device_Model, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Id = new ExpandedNodeId(Variables.Observation_Id, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Performer_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Performer_Id = new ExpandedNodeId(Variables.Observation_Performer_Id, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Performer_Name_ForFamily Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Performer_Name_ForFamily = new ExpandedNodeId(Variables.Observation_Performer_Name_ForFamily, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Performer_Name_WithGiven Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Performer_Name_WithGiven = new ExpandedNodeId(Variables.Observation_Performer_Name_WithGiven, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Subject_Id Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Subject_Id = new ExpandedNodeId(Variables.Observation_Subject_Id, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Subject_Name_ForFamily Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Subject_Name_ForFamily = new ExpandedNodeId(Variables.Observation_Subject_Name_ForFamily, Namespaces.opcfhir);

        /// <summary>
        /// The identifier for the Observation_Subject_Name_WithGiven Variable.
        /// </summary>
        public static readonly ExpandedNodeId Observation_Subject_Name_WithGiven = new ExpandedNodeId(Variables.Observation_Subject_Name_WithGiven, Namespaces.opcfhir);

    }
    #endregion

    #region VariableType Node Identifiers
    /// <summary>
    /// A class that declares constants for all VariableType in the Model.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("UaModeler", "1.4.2")]
    public static partial class VariableTypeIds
    {
    }
    #endregion

    #region BrowseName Declarations
    /// <summary>
    /// Declares all of the BrowseNames used in the Model.
    /// </summary>
    public static partial class BrowseNames
    {
        /// <summary>
        /// The BrowseName for the CodableConceptType component.
        /// </summary>
        public const string CodableConceptType = "CodableConceptType";
        /// <summary>
        /// The BrowseName for the Code component.
        /// </summary>
        public const string Code = "Code";
        /// <summary>
        /// The BrowseName for the Code_2 component.
        /// </summary>
        public const string Code_2 = "Code_2";
        /// <summary>
        /// The BrowseName for the Coding component.
        /// </summary>
        public const string Coding = "Coding";
        /// <summary>
        /// The BrowseName for the CodingType component.
        /// </summary>
        public const string CodingType = "CodingType";
        /// <summary>
        /// The BrowseName for the ComponentType component.
        /// </summary>
        public const string ComponentType = "ComponentType";
        /// <summary>
        /// The BrowseName for the Components component.
        /// </summary>
        public const string Components = "Components";
        /// <summary>
        /// The BrowseName for the Device component.
        /// </summary>
        public const string Device = "Device";
        /// <summary>
        /// The BrowseName for the DeviceType component.
        /// </summary>
        public const string DeviceType = "DeviceType";
        /// <summary>
        /// The BrowseName for the Diastolic component.
        /// </summary>
        public const string Diastolic = "Diastolic";
        /// <summary>
        /// The BrowseName for the ForFamily component.
        /// </summary>
        public const string ForFamily = "ForFamily";
        /// <summary>
        /// The BrowseName for the HumanNameType component.
        /// </summary>
        public const string HumanNameType = "HumanNameType";
        /// <summary>
        /// The BrowseName for the Id component.
        /// </summary>
        public const string Id = "Id";
        /// <summary>
        /// The BrowseName for the Interpretation component.
        /// </summary>
        public const string Interpretation = "Interpretation";
        /// <summary>
        /// The BrowseName for the Manufacturer component.
        /// </summary>
        public const string Manufacturer = "Manufacturer";
        /// <summary>
        /// The BrowseName for the Model component.
        /// </summary>
        public const string Model = "Model";
        /// <summary>
        /// The BrowseName for the Name component.
        /// </summary>
        public const string Name = "Name";
        /// <summary>
        /// The BrowseName for the Observation component.
        /// </summary>
        public const string Observation = "Observation";
        /// <summary>
        /// The BrowseName for the ObservationType component.
        /// </summary>
        public const string ObservationType = "ObservationType";
        /// <summary>
        /// The BrowseName for the PatientType component.
        /// </summary>
        public const string PatientType = "PatientType";
        /// <summary>
        /// The BrowseName for the Performer component.
        /// </summary>
        public const string Performer = "Performer";
        /// <summary>
        /// The BrowseName for the PractitionerType component.
        /// </summary>
        public const string PractitionerType = "PractitionerType";
        /// <summary>
        /// The BrowseName for the QuantityType component.
        /// </summary>
        public const string QuantityType = "QuantityType";
        /// <summary>
        /// The BrowseName for the ResourceReferenceType component.
        /// </summary>
        public const string ResourceReferenceType = "ResourceReferenceType";
        /// <summary>
        /// The BrowseName for the Subject component.
        /// </summary>
        public const string Subject = "Subject";
        /// <summary>
        /// The BrowseName for the System component.
        /// </summary>
        public const string System = "System";
        /// <summary>
        /// The BrowseName for the Systolic component.
        /// </summary>
        public const string Systolic = "Systolic";
        /// <summary>
        /// The BrowseName for the Unit component.
        /// </summary>
        public const string Unit = "Unit";
        /// <summary>
        /// The BrowseName for the Value component.
        /// </summary>
        public const string Value = "Value";
        /// <summary>
        /// The BrowseName for the WithGiven component.
        /// </summary>
        public const string WithGiven = "WithGiven";
    }
    #endregion

    #region Namespace Declarations
    /// <summary>
    /// Defines constants for all namespaces referenced by the Model.
    /// </summary>
    public static partial class Namespaces
    {
        /// <summary>
        /// The URI for the OpcUa namespace (.NET code namespace is 'Opc.Ua').
        /// </summary>
        public const string OpcUa = "http://opcfoundation.org/UA/";

        /// <summary>
        /// The URI for the OpcUaXsd namespace (.NET code namespace is 'Opc.Ua').
        /// </summary>
        public const string OpcUaXsd = "http://opcfoundation.org/UA/2008/02/Types.xsd";

        /// <summary>
        /// The URI for the opcfhir namespace.
        /// </summary>
        public const string opcfhir = "http://thi.opcua.hl7.org/opcfhir/";

        /// <summary>
        /// The URI for the opcfhirXsd namespace.
        /// </summary>
        public const string opcfhirXsd = "http://thi.opcua.hl7.org/opcfhir/Types.xsd";
    }
    #endregion
}

